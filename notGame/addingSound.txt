short explainer on adding sounds to ygsiac

so you've got an entity that does shit, huh?
and you want to hear it doing that shit, right?
RIGHT!
well get your ass ready...

FIRST:
    we need to initialize the pygame.mixer module to get access to the speakers
----------------------------------------------------------------------------------
os.environ['SDL_VIDEO_WINDOW_POS'] = "%d,%d" % (120,20)

def main():
    WIN_WIDTH = 800
    WIN_HEIGHT = 480
    DISPLAY = (WIN_WIDTH, WIN_HEIGHT)
    #DEPTH = 32
    #FLAGS = 0
    #CAMERA_SLACK = 32
    pygame.init()
    pygame.mixer.init() <-------------- we do that here right before we set up the display window.
    pygame.display.set_mode(DISPLAY)
    pygame.display.set_caption("You're Making A Game!")
    e = Engine()
    e.current_state = Logo()
    e.run()
-------------------------------------------------------------------------------------


SECOND:
    meanwhile elsewhere we've got our entity that does shit
    that we need to add sounds to so check it..........
--------------------------------------------------------------------------
class Entity(Base)
    def __init__(self)
        Base.__init__(self)
        self.blah = "blahblah/blah"
        sound = 'sounds/dicklazorz.wav' <---------- make a variable reference to the filepath
        self.sound = pygame.mixer.Sound(sound) <--- pass that as an argument to instance a sound object

    def jump(self)
        self.sound.play() <------------------------ then when the action you want the sound bound to occurs
        self.yvelocity += 10                        call the play method of your new sound object.


THIRD:
    test, rinse, and repeat step two for more sounds.
    thats it.